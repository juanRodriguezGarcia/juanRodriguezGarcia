AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Default: ClusterFargateDemo
  ECSServiceName:
    Type: String
    Default: servicio-nginx-fargate-v5
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-a48c37c6
  SubnetIDs:
    Type: CommaDelimitedList
    Default: subnet-19362e71
  VpcID:
    Type: String
    Default: vpc-348e7e5f
  LoadBalancerName:
    Type: String
    Default: balanceador-test-v2
  TaskDef:
    Type: String
    Default: arn:aws:ecs:us-east-2:134383757275:task-definition/nginx-fargate-v2:11
Resources:
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: ClusterFargateDemo
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Base: 0
          Weight: 1
      TaskDefinition: !Ref TaskDef
      ServiceName: servicio-nginx-fargate-v5
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: contenedor-fargate
          ContainerPort: 8081
          LoadBalancerName: !Ref AWS::NoValue
          TargetGroupArn: !Ref TargetGroup
      HealthCheckGracePeriodSeconds: '60'
      NetworkConfiguration:
        AwsvpcConfiguration:
          #AssignPublicIp: ENABLED
          AssignPublicIp: DISABLED 
          SecurityGroups: !Ref SecurityGroupIDs
          Subnets: !Ref SubnetIDs
      PlatformVersion: LATEST
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DeploymentController:
        Type: ECS
      ServiceConnectConfiguration:
        Enabled: false
      Tags: []
      EnableECSManagedTags: true
    DependsOn:
      - Listener
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /index.html
      Name: target-ecs-group-fargate-v4
      Port: 8081
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      VpcId: vpc-348e7e5f
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '300'
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: arn:aws:elasticloadbalancing:us-east-2:134383757275:loadbalancer/app/balanceador-test-v2/3c5364c9d31d97f7
      Port: 8081
      Protocol: HTTP
Outputs:
  ClusterName:
    Description: The cluster used to create the service.
    Value: !Ref ECSClusterName
  ECSService:
    Description: The created service.
    Value: !Ref ECSService
  Listener:
    Description: The created listener.
    Value: !Ref Listener
  TargetGroup:
    Description: The created target group.
    Value: !Ref TargetGroup